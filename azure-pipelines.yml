# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest

# variables:
#   buildConfiguration: 'Release'

# steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'

### YamlMime:Yaml
# ms.openlocfilehash: e8e0c0487370439eb50ee376aa05769b8455f241
# ms.sourcegitcommit: 57d343a6c7c2aa43c9f007d7823891d2141eb471
# ms.translationtype: HT
# ms.contentlocale: ru-RU
# ms.lasthandoff: 07/01/2021
# ms.locfileid: "113169706"
trigger:
- '*'
pool:
  vmImage: ubuntu-20.04
  demands:
  - npm
variables:
  buildConfiguration: Release
  wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
  dotnetSdkVersion: 5.x
steps:
- task: UseDotNet@2
  displayName: Use .NET SDK $(dotnetSdkVersion)
  inputs:
    version: $(dotnetSdkVersion)
- task: Npm@1
  displayName: Run npm install
  inputs:
    verbose: false
- script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
  displayName: Compile Sass assets
- task: gulp@1
  displayName: Run gulp tasks
- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  workingDirectory: $(wwwrootDir)
- task: DotNetCoreCLI@2
  displayName: Restore project dependencies
  inputs:
    command: restore
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build the project - $(buildConfiguration)
  inputs:
    command: build
    arguments: --no-restore --configuration $(buildConfiguration)
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Publish the project - $(buildConfiguration)
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
    zipAfterPublish: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()